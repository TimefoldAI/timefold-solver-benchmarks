<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ai.timefold.solver.benchmarks</groupId>
    <artifactId>timefold-solver-benchmarks</artifactId>
    <version>999-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Timefold Solver Score Director Benchmark</name>
    <description>
        This module builds a benchmark of all the various Timefold Solver score directors over various examples.
    </description>
    <url>https://timefold.ai</url>

    <properties>
        <version.ai.timefold.solver>999-SNAPSHOT</version.ai.timefold.solver>
        <version.org.apache.poi>5.3.0</version.org.apache.poi>
        <version.org.jdom>2.0.6.1</version.org.jdom>
        <version.org.junit>5.10.2</version.org.junit>
        <version.org.mockito>5.11.0</version.org.mockito>
        <version.spotless.plugin>2.43.0</version.spotless.plugin>
        <version.tools.profiler>3.0</version.tools.profiler>
        <spotless.skip>false</spotless.skip>
        <spotless.goal>apply</spotless.goal>
        <java.module.name>ai.timefold.solver.benchmarks</java.module.name>
        <java.release>21</java.release>
        <jmh.version>1.37</jmh.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <uberjar.name>benchmarks</uberjar.name>
        <async.profiler.directory>async-profiler-${version.tools.profiler}-linux-x64</async.profiler.directory>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>ai.timefold.solver.enterprise</groupId>
                <artifactId>timefold-solver-enterprise-build-parent</artifactId>
                <version>${version.ai.timefold.solver}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>${jmh.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>${jmh.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>ai.timefold.solver.enterprise</groupId>
            <artifactId>timefold-solver-enterprise-core</artifactId>
        </dependency>
        <dependency>
            <groupId>ai.timefold.solver</groupId>
            <artifactId>timefold-solver-benchmark</artifactId>
        </dependency>
        <dependency>
            <groupId>ai.timefold.solver</groupId>
            <artifactId>timefold-solver-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom2</artifactId>
            <version>${version.org.jdom}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${version.org.apache.poi}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${version.org.apache.poi}</version>
        </dependency>
        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-to-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- JSON -->
        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>ai.timefold.solver</groupId>
            <artifactId>timefold-solver-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ai.timefold.solver</groupId>
            <artifactId>timefold-solver-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <release>${java.release}</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>
                <configuration>
                    <finalName>${uberjar.name}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors> <!-- Builds a JAR with dependencies that correctly merges META-INF/service descriptors. -->
                        <descriptor>src/assembly/jar-with-dependencies-and-services.xml</descriptor>
                    </descriptors>
                    <archive>
                        <manifestEntries>
                            <Multi-Release>true</Multi-Release> <!-- Some of our dependencies are multi-release JARs. -->
                        </manifestEntries>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.0</version>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${version.spotless.plugin}</version>
                <dependencies>
                    <dependency>
                        <groupId>ai.timefold.solver</groupId>
                        <artifactId>timefold-solver-ide-config</artifactId>
                        <version>${version.ai.timefold.solver}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>spotless-formatting</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>${spotless.goal}</goal>
                        </goals>
                        <configuration>
                            <skip>${spotless.skip}</skip>
                            <java>
                                <eclipse>
                                    <file>eclipse-format.xml</file>
                                </eclipse>
                                <importOrder>
                                    <file>eclipse.importorder</file>
                                </importOrder>
                                <removeUnusedImports/>
                                <replaceRegex> <!-- Wildcard imports will break the build. -->
                                    <name>Remove wildcard imports</name>
                                    <searchRegex>import\s+[^\*\s]+\*;(\r\n|\r|\n)</searchRegex>
                                    <replacement>$1</replacement>
                                </replaceRegex>
                            </java>
                            <pom />
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>quickly</id>
            <activation>
                <property>
                    <name>quickly</name>
                </property>
            </activation>
            <properties>
                <spotless.skip>true</spotless.skip>
                <skipTests>true</skipTests>
            </properties>
        </profile>
        <profile>
            <id>jmh</id>
            <activation>
                <property>
                    <name>!skipJMH</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>tools.profiler</groupId>
                    <artifactId>async-profiler-converter</artifactId>
                    <version>${version.tools.profiler}</version>
                    <scope>system</scope>
                    <systemPath>${project.basedir}/${async.profiler.directory}/lib/converter.jar</systemPath>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>timefold-solver-enterprise</id>
            <name>Timefold Solver Enterprise Edition</name>
            <url>https://timefold.jfrog.io/artifactory/releases/</url>
        </repository>
    </repositories>

</project>
